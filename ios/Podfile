require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

ENV['RCT_NEW_ARCH_ENABLED'] = '0' if podfile_properties['newArchEnabled'] == 'false'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'
install! 'cocoapods',
  deterministic_uuids: false

prepare_react_native_project!

target 'SudokuApp' do
  use_expo_modules!

  # Explicitly pin ExpoModulesCore to the root folder so CocoaPods
  # doesnâ€™t also pick up the ios/ subfolder version.
  pod 'ExpoModulesCore', path: '../node_modules/expo-modules-core'

  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'
    config_command = ['node', '-e', "process.argv=['', '', 'config'];require('@react-native-community/cli').run()"]
  else
    config_command = [
      'npx',
      'expo-modules-autolinking',
      'react-native-config',
      '--json',
      '--platform',
      'ios'
    ]
  end

  config = use_native_modules!(config_command)

  use_frameworks! linkage: podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']
  use_frameworks! linkage: ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']

  use_react_native!(
    path: config[:reactNativePath],
    hermes_enabled: podfile_properties['expo.jsEngine'].nil? || podfile_properties['expo.jsEngine'] == 'hermes',
    app_path: "#{Pod::Config.instance.installation_root}/..",
    privacy_file_aggregation_enabled: podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false'
  )

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      mac_catalyst_enabled: false,
      ccache_enabled: podfile_properties['apple.ccacheEnabled'] == 'true'
    )

    # Disable code signing on resource bundles (Xcode 14+)
    installer.target_installation_results.pod_target_installation_results.each do |_, result|
      result.resource_bundle_targets.each do |bundle_target|
        bundle_target.build_configurations.each do |cfg|
          cfg.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end

    # Workaround for EXAdsAdMob missing header
    installer.pods_project.targets.each do |target|
      if target.name == 'EXAdsAdMob'
        target.build_configurations.each do |cfg|
          cfg.build_settings['HEADER_SEARCH_PATHS'] ||= ['$(inherited)']
          cfg.build_settings['HEADER_SEARCH_PATHS'] << '"${PODS_ROOT}/Headers/Public/ExpoModulesCore"'
        end
      end
    end
  end
end
